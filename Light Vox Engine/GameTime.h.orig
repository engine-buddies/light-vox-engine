#pragma once
#include <Windows.h>
class GameTime
{
public:
<<<<<<< HEAD
	/// <summary>
	/// Gets singleton object of time
	/// </summary>
	static GameTime* GetInstance();
	/// <summary>
	/// Releases singleton object of time
	/// </summary>
	void ReleaseInstance();
	/// <summary>
	/// Intializes preformance counter, current time, previous time
	/// </summary>
	void Init();
	/// <summary>
	/// Updates the time 
	/// </summary>
	void UpdateTimer();
	/// <summary>
	/// return total time (time since starting program) as double 
	/// </summary>
    double GetTotalDoubleTime();
	/// <summary>
	/// Return delta time as double
	/// </summary>
	double GetDeltaDoubleTime();
=======
    /// <summary>
    /// Gets singleton object of time
    /// </summary>
    static GameTime* GetInstance();
    /// <summary>
    /// Releases singleton object of time
    /// </summary>
    void ReleaseInstance();
    /// <summary>
    /// Intializes preformance counter, current time, previous time
    /// </summary>
    void Init();
    /// <summary>
    /// Updates the time 
    /// </summary>
    void UpdateTimer();
    /// <summary>
    /// return total time (time since starting program) as double 
    /// </summary>
    double GetTotalDoubleTime();
    /// <summary>
    /// Return delta time as double
    /// </summary>
    double GetDeltaDoubleTime();
>>>>>>> development
    /// <summary>
    /// return total time (time since starting program) as float 
    /// </summary>
    float GetTotalFloatTime();
    /// <summary>
    /// Return delta time as float
    /// </summary>
<<<<<<< HEAD
	float GetDeltaFloatTime();
=======
    float GetDeltaFloatTime();
>>>>>>> development

private:
    static GameTime* instance;

    double startTime;
    double currentTime;
    double previousTime;

<<<<<<< HEAD
	double totalDoubleTime;
	double deltaDoubleTime;
	double perfCounterSeconds;
=======
    double totalDoubleTime;
    double deltaDoubleTime;
    double perfCounterSeconds;
>>>>>>> development

    float totalFloatTime;
    float deltaFloatTime;
};

