<<<<<<< HEAD
#include <iostream>
#include "Time.h"
=======
#include "stdafx.h"
#include "engine.h"
>>>>>>> 59154ef2b77365057381e5e77919f30342187edb

int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow)
{
<<<<<<< HEAD
	std::cout << "Welcome to the Light Vox Engine!" << std::endl;
	auto time = Time::GetInstance();
	time->Init();
	while (true)
	{
		time->UpdateTimer();
		std::cout << time->getTotalTimeFloat() << std::endl;
	}
	time->ReleaseInstance();
=======
	{
		//memory leak detections
#if defined(_DEBUG)
		_CrtSetDbgFlag(_CRTDBG_ALLOC_MEM_DF | _CRTDBG_LEAK_CHECK_DF);
#endif
		Engine engine(hInstance);

		LV_PRINT_DEBUG("Initializing Systems");
		ThrowIfFailed(engine.InitSystems());	//init all 
		ThrowIfFailed(engine.Run());			//run that baby
	}

	//dump that info
#if defined(_DEBUG)
	_CrtDumpMemoryLeaks();
#endif
>>>>>>> 59154ef2b77365057381e5e77919f30342187edb
	return 0;
}